{"version":3,"sources":["components/TextContainer.js","constants.js","components/MenuBar.js","components/ProjectCard.js","components/ProjectCardList.js","projectList.js","components/SideMenu.js","about.js","components/ListContainer.js","containers/App.js","serviceWorker.js","index.js"],"names":["TextContainer","pStyle","font-size","_this2","this","text","props","react_default","a","createElement","Container","className","textAlign","map","ele","idx","style","key","Component","menuItems","main","contact","git","redirectLinkedInd","redirectGitHub","redirectEmail","MenuBar","Menu","inverted","size","Item","href","target","name","position","Button","basic","color","onClick","showSideMenu","Icon","ProjectCard","state","visible","toggleModal","_this","setState","prevState","handleClick","src","window","open","currentTarget","value","_this$props","title","desc","detail","meta","img","Card","link","Image","alt","wrapped","ui","Content","Header","Meta","Description","TransitionablePortal","transition","animation","duration","Modal","closeOnDimmerClick","closeOnDocumentClick","defaultOpen","image","Label","Actions","primary","ProjectCardList","_ref","projects","project","id","components_ProjectCard","SideMenu","handleSidebarHide","Sidebar","Pushable","as","Segment","icon","onHide","vertical","width","direction","Pusher","children","aboutMe","intro","interest","ListContainer","list","List","App","components_MenuBar","SideMenu_SideMenu","Grid","centered","columns","Row","stretched","verticalAlign","Column","rounded","fluid","TextContainer_TextContainer","ListContainer_ListContainer","components_ProjectCardList","Boolean","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7469b7fe.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport { Container } from 'semantic-ui-react'\n\nexport default class TextContainer extends Component {\n  pStyle = {\n    \"font-size\": \"20px\"\n  }\n  render() {\n    const  {text} = this.props;\n    return (\n      <Container className='intro' textAlign='left'>\n        {text.map((ele, idx) =>\n            <p style={this.pStyle} key={idx}>{ele}</p>\n        )}\n      </Container>\n    )\n  }\n}\n","const menuItems = { \n    main: 'Henry Valbuena', \n    contact: 'Contact', \n    git: 'Source Code', \n    redirectLinkedInd: 'https://www.linkedin.com/in/henry-valbuena/',\n    redirectGitHub: 'https://github.com/henryvalbuena',\n    redirectEmail: 'mailto:henry.valbuena@outlook.com'\n};\n\nexport default menuItems;","import React, { Component } from 'react'\nimport { Menu, Button, Icon } from 'semantic-ui-react'\nimport menuItems from '../constants'\n\nclass MenuBar extends Component {\n    render() {\n        return (\n            <Menu inverted size='huge'>\n                <Menu.Item href={menuItems.redirectLinkedInd} target='_blank'\n                    name={menuItems.main}>\n                    Henry Valbuena\n                </Menu.Item>\n                <Menu.Item href={menuItems.redirectEmail} target='_blank'\n                    className='itemMenu'\n                    position='right'\n                    name={menuItems.contact}>\n                    Contact\n                </Menu.Item>\n                <Menu.Item href={menuItems.redirectGitHub} target='_blank'\n                    className='itemMenu'\n                    name={menuItems.git}>\n                    Source Code\n                </Menu.Item>\n                <Button \n                    className='mobileMenu' \n                    basic color='black'\n                    onClick={this.props.showSideMenu}>\n                    <Icon inverted name='grid layout' />\n                </Button>\n            </Menu>\n        )\n    }\n}\n\nexport default MenuBar;","import React, { Component } from 'react'\nimport { Card, Image, Label, Modal, TransitionablePortal, Button } from 'semantic-ui-react'\n\nclass ProjectCard extends Component {\n  state = { visible: false }\n  toggleModal = () => {\n    this.setState(prevState => ({ visible: !prevState.visible}))\n  }\n  handleClick = src => {\n    window.open(src.currentTarget.value, '_blank');\n  }\n\n  render() {\n    const { visible } = this.state\n    const { name, title, desc, detail, meta, img, src } = this.props\n    return (\n      <Card link onClick={this.toggleModal}>\n        <Image alt='Project Image' src={img} wrapped ui={false} />\n        <Card.Content>\n          <Card.Header>{name}</Card.Header>\n          <Card.Meta textAlign='center'>\n            {meta.map((ele, idx) => \n              <span key={idx}>{ele}</span>\n            )}\n          </Card.Meta>\n          <Card.Description>\n            {desc}\n          </Card.Description>\n        </Card.Content>\n        <TransitionablePortal open={visible}  transition={{ animation:'fade up', duration: 400 }}> \n          <Modal closeOnDimmerClick={false} closeOnDocumentClick={false} defaultOpen={true} size='large'>\n            <Modal.Header>{name}</Modal.Header>\n            <Modal.Content image>\n              <Image alt='Project Image' size='huge' src={img} />\n              <Modal.Description>\n                <h3>{title}</h3>\n                <p>{detail}</p>\n                {meta.map((ele, idx) => \n                  <Label key={idx}>{ele}</Label>\n                )}\n              </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button primary value={src} onClick={this.handleClick}>More</Button>\n            </Modal.Actions>\n          </Modal>\n        </TransitionablePortal>\n      </Card>\n      \n    )\n  }\n}\n\nexport default ProjectCard;\n","import React from 'react';\nimport ProjectCard from '../components/ProjectCard';\n\nconst ProjectCardList = ({projects}) => (\n    projects.map((project) => (\n        <div className='cards' key={project.id}>\n            <ProjectCard\n                id={project.id}\n                name={project.name}\n                title={project.title}\n                meta={project.meta}\n                desc={project.desc}\n                detail={project.detail}\n                img={project.img}\n                src={project.src}\n            />\n        </div>\n    ))\n);\n\nexport default ProjectCardList;","const projects = [\n    {\n        id: 'P01',\n        name: 'Udacity Latte Cafe',\n        title: 'Full-stack REST application',\n        meta: ['Flask', 'SQL-Alchemy', 'Docker', 'Nginx', 'Angular'],\n        desc: 'Secure REST full-stack application with persistence',\n        detail: 'Designed and developed full-stack application as part of the Udacity Full-Stack Nanodegree. The application whole project includes designing and implementation of the REST API, database models, IAM roles and permissions using Auth0, frontend and backend programming, testing and deployment using Docker containers. The project backend was build using Python Flask web framework, secured using JWT and role based access and permissions to CRUD operations backed up by a ORM persistance model using SQLite for development and Postgress for deployment. The frontend was built with JavaScript Angular and is powered by an Nginx configuration which serves the content.',\n        img: './img/udacity_late.png',\n        src: 'https://github.com/henryvalbuena/full-stack-project'\n    },\n    {\n        id: 'P02',\n        name: 'Java Desktop Application',\n        title: 'Maze Solver',\n        meta: ['Java', 'DSA', 'DFS', 'API'],\n        desc: 'Maze solver application developed using Java',\n        detail: 'Designed to work with images of mazes, the idea is to process the image and parse the binary representation of the maze into a data structure. From this point, the graph algorithm to be used can work with the data and find the path from the start point to the exit. There is another module, which will process the result from the algorithm and draw the path found on the image from start to end.',\n        img: './img/maze04_finished.png',\n        src: 'https://github.com/henryvalbuena/MazeSolver'\n    },\n    {\n        id: 'P03',\n        name: 'Client-Server API',\n        title: 'Remote Manager',\n        meta: ['JavaScript', 'Node.js', 'C', 'C++', 'Linux', 'Shell Scripting'],\n        desc: 'Client side developed using C/C++ and Server side using Node.js, JavaScript and Shell Scripting',\n        detail: 'This application is based on two parts, the client and the server. The client, consist of a C/C++ application which encloses all the relevant processes to be able to: 1) connect with the server 2) to send and receive data 3) to work with the data or state of the server. The server is a combination of Node.js, JavaScript and Shell Scripts using Node\\'s API',\n        img: './img/client_server.png',\n        src: 'https://github.com/henryvalbuena/cpp_nodejs_sockets'\n    },\n    {\n        id: 'P04',\n        name: 'Desktop Web Browser Game',\n        title: 'Space Battle',\n        meta: ['JavaScript', 'HTML', 'Canvas', 'GPL'],\n        desc: 'Space battle game developed using JavaScript',\n        detail: '2D web browser game developed using Canvas API, DOM, and JavaScript to render the visuals, design and implement the game logic, and control user interaction. This was one of the projects I was doing while doing #100DaysofCode as part of my personal challenge to learn more things whiles coding. It is not polished, but the way I coded makes it easy to refactor and/or improve. It is the first game I ever created',\n        img: './img/ran-image-d23.gif',\n        src: 'https://github.com/henryvalbuena/SpaceBattle'\n    },\n    {\n        id: 'P05',\n        name: 'Chat',\n        title: 'Terminal Like Chat',\n        meta: ['JavaScript', 'CSS', 'Node.js', 'Socket.io', 'Express.js'],\n        desc: 'Terminal like chat built with CSS and JavaScript supported by Node.js, Express.js, and Socket.io in the backend',\n        detail: 'One room chat app that broadcast messagess among the connected users. It uses Socket.io to manage the web sockets and user identity. This project, will incorporate a built-in bot with commands that will provide information about me, my projects, and skills.',\n        img: './img/chat_20190629.gif',\n        src: 'https://github.com/henryvalbuena/chatbot'\n    }\n]\nexport default projects;","import React, { Component } from 'react'\nimport { Icon, Menu, Segment, Sidebar } from 'semantic-ui-react'\nimport menuItems from '../constants'\n\nexport default class SideMenu extends Component {\n  state = { visible: false }\n  handleSidebarHide = () => this.setState({ visible: false })\n  componentWillReceiveProps(props) {\n    const { visible } = props\n    this.setState({visible: visible})\n  }\n\n  render() {\n    const { visible } = this.state;\n\n    return (\n      <div>\n        <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation='push'\n            icon='labeled'\n            inverted\n            onHide={this.handleSidebarHide}\n            vertical\n            visible={visible}\n            width='thin'\n            direction='top'>\n            <Menu.Item href={menuItems.redirectEmail} target='_blank'\n              name={menuItems.contact}>\n              <Icon name='home' />\n              {menuItems.contact}\n            </Menu.Item>\n            <Menu.Item href={menuItems.redirectGitHub} target='_blank'\n              name={menuItems.git}>\n              <Icon name='gamepad' />\n              {menuItems.git}\n            </Menu.Item>\n          </Sidebar>\n          <Sidebar.Pusher>\n            {this.props.children}\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    );\n  }\n}\n","const aboutMe = {\n    intro: [\n      \"Hellow! Yes with a 'w'. I'm an Electronic Computer Programmer... Wow that sounds fancy and complex, right? Ok, maybe not, but I like to call my self that way. I started my professional career as an Electronic Engineer, after eight years or so I decided that I will follow my passion and make my hobby part of that career, so I went for a Computer Programmer Diploma after and here I am 🎉. And yes, you've guessed it! My hobby is programming. I've been doing it since I got my first computer, since then I haven't stopped 🤘 yeah!\",\n    ],\n    interest: [\n      \"Crypto\",\n      \"Performance and Optimization\",\n      \"Full-stack Development\",\n      \"Ethical Hacking\",\n      \"Quality Assurance\",\n      \"Automation\",\n    ],\n  };\n  \n  export default aboutMe;","import React, { Component } from 'react'\nimport { Container, List } from 'semantic-ui-react'\n\nexport default class ListContainer extends Component {\n    pStyle = {\n      \"font-size\": \"16px\"\n    }\n    render() {\n      const  {list} = this.props;\n      return (\n        <Container>\n          <List>\n            {list.map((ele) =>\n              <List.Item style={this.pStyle}>{ele}</List.Item> \n            )}\n          </List>\n        </Container>\n      )\n    }\n  }","import React, { Component } from 'react';\nimport TextContainer from '../components/TextContainer';\nimport MenuBar from '../components/MenuBar';\nimport ProjectCardList from '../components/ProjectCardList';\nimport { Grid, Image } from 'semantic-ui-react';\nimport projects from '../projectList';\nimport SideMenu from '../components/SideMenu';\nimport aboutMe from '../about';\nimport ListContainer from '../components/ListContainer';\n\nclass App extends Component {\n    state = { visible: false }\n    \n    showSideMenu = () => {\n        this.setState(prevState => ({\n            visible: !prevState.visible\n        }))\n    }\n    \n    render() {\n        return (\n            <div>\n                <MenuBar showSideMenu={this.showSideMenu}/>\n                <SideMenu visible={this.state.visible}>\n                    <Grid centered columns='equal' >\n                        <Grid.Row>\n                            <h1 className='header'>A little about me</h1>\n                        </Grid.Row>\n                        <Grid.Row stretched={false} verticalAlign=\"middle\" centered>\n                            <Grid.Column verticalAlign='middle'>\n                                <Image src='https://res.cloudinary.com/devhenry/image/upload/c_scale,h_682/v1569000107/Jenova/img/me02.jpg' size='medium' rounded fluid={false} verticalAlign='middle' />\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <TextContainer text={aboutMe.intro}/>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <h2>Interests</h2>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <ListContainer list={aboutMe.interest}/>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <h2>Most recent projects</h2>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <ProjectCardList projects={projects}/>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <p>Developed by <b>Henry Valbuena</b> 2019</p>\n                        </Grid.Row>\n                        <Grid.Row></Grid.Row>\n                    </Grid>\n                </SideMenu>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './containers/App.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}