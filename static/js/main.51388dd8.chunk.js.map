{"version":3,"sources":["components/TextContainer.js","constants.js","components/MenuBar.js","components/ProjectCard.js","components/ProjectCardList.js","projectList.js","components/SideMenu.js","about.js","components/ListContainer.js","containers/App.js","serviceWorker.js","index.js"],"names":["TextContainer","text","this","props","react_default","a","createElement","Container","className","textAlign","map","ele","idx","key","Component","menuItems","main","contact","git","redirectLinkedInd","redirectGitHub","redirectEmail","MenuBar","Menu","inverted","size","Item","href","target","name","position","Button","basic","color","onClick","showSideMenu","Icon","ProjectCard","state","visible","toggleModal","_this","setState","prevState","handleClick","src","window","open","currentTarget","value","_this$props","title","desc","detail","meta","img","Card","link","Image","alt","wrapped","ui","Content","Header","Meta","Description","TransitionablePortal","transition","animation","duration","Modal","closeOnDimmerClick","closeOnDocumentClick","defaultOpen","image","Label","Actions","primary","ProjectCardList","_ref","projects","project","id","components_ProjectCard","SideMenu","handleSidebarHide","Sidebar","Pushable","as","Segment","icon","onHide","vertical","width","direction","Pusher","children","aboutMe","intro","interest","ListContainer","line","list","App","components_MenuBar","SideMenu_SideMenu","Grid","centered","columns","Row","TextContainer_TextContainer","ListContainer_ListContainer","components_ProjectCardList","Boolean","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51388dd8.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport { Container } from 'semantic-ui-react'\n\nexport default class TextContainer extends Component {\n  render() {\n    const  {text} = this.props;\n    return (\n      <Container className='intro' textAlign='left'>\n        {text.map((ele, idx) =>\n            <p key={idx}>{ele}</p>\n        )}\n      </Container>\n    )\n  }\n}\n","const menuItems = { \n    main: 'Henry Valbuena', \n    contact: 'Contact', \n    git: 'Source Code', \n    redirectLinkedInd: 'https://www.linkedin.com/in/henry-valbuena/',\n    redirectGitHub: 'https://github.com/henryvalbuena',\n    redirectEmail: 'mailto:henry.valbuena@outlook.com'\n};\n\nexport default menuItems;","import React, { Component } from 'react'\nimport { Menu, Button, Icon } from 'semantic-ui-react'\nimport menuItems from '../constants'\n\nclass MenuBar extends Component {\n    render() {\n        return (\n            <Menu inverted size='huge'>\n                <Menu.Item href={menuItems.redirectLinkedInd} target='_blank'\n                    name={menuItems.main}>\n                    Henry Valbuena\n                </Menu.Item>\n                <Menu.Item href={menuItems.redirectEmail} target='_blank'\n                    className='itemMenu'\n                    position='right'\n                    name={menuItems.contact}>\n                    Contact\n                </Menu.Item>\n                <Menu.Item href={menuItems.redirectGitHub} target='_blank'\n                    className='itemMenu'\n                    name={menuItems.git}>\n                    Source Code\n                </Menu.Item>\n                <Button \n                    className='mobileMenu' \n                    basic color='black'\n                    onClick={this.props.showSideMenu}>\n                    <Icon inverted name='grid layout' />\n                </Button>\n            </Menu>\n        )\n    }\n}\n\nexport default MenuBar;","import React, { Component } from 'react'\nimport { Card, Image, Label, Modal, TransitionablePortal, Button } from 'semantic-ui-react'\n\nclass ProjectCard extends Component {\n  state = { visible: false }\n  toggleModal = () => {\n    this.setState(prevState => ({ visible: !prevState.visible}))\n  }\n  handleClick = src => {\n    window.open(src.currentTarget.value, '_blank');\n  }\n\n  render() {\n    const { visible } = this.state\n    const { name, title, desc, detail, meta, img, src } = this.props\n    return (\n      <Card link onClick={this.toggleModal}>\n        <Image alt='Project Image' src={img} wrapped ui={false} />\n        <Card.Content>\n          <Card.Header>{name}</Card.Header>\n          <Card.Meta>\n            {meta.map((ele, idx) => \n              <span key={idx}>{ele}</span>\n            )}\n          </Card.Meta>\n          <Card.Description>\n            {desc}\n          </Card.Description>\n        </Card.Content>\n        <TransitionablePortal open={visible}  transition={{ animation:'fade up', duration: 400 }}> \n          <Modal closeOnDimmerClick={false} closeOnDocumentClick={false} defaultOpen={true} size='large'>\n            <Modal.Header>{name}</Modal.Header>\n            <Modal.Content image>\n              <Image alt='Project Image' size='large' src={img} />\n              <Modal.Description>\n                <h3>{title}</h3>\n                <p>{detail}</p>\n                {meta.map((ele, idx) => \n                  <Label key={idx}>{ele}</Label>\n                )}\n              </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button primary value={src} onClick={this.handleClick}>More</Button>\n            </Modal.Actions>\n          </Modal>\n        </TransitionablePortal>\n      </Card>\n      \n    )\n  }\n}\n\nexport default ProjectCard;\n","import React from 'react';\nimport ProjectCard from '../components/ProjectCard';\n\nconst ProjectCardList = ({projects}) => (\n    projects.map((project) => (\n        <div className='cards' key={project.id}>\n            <ProjectCard\n                id={project.id}\n                name={project.name}\n                title={project.title}\n                meta={project.meta}\n                desc={project.desc}\n                detail={project.detail}\n                img={project.img}\n                src={project.src}\n            />\n        </div>\n    ))\n);\n\nexport default ProjectCardList;","const projects = [\n    {\n        id: 'P02',\n        name: 'Java Application',\n        title: 'Maze Solver',\n        meta: ['Java', 'DSA', 'DFS', 'API'],\n        desc: 'Maze solver application developed using Java',\n        detail: 'Designed to work with images of mazes, the idea is to process the image and parse the binary representation of the maze into a data structure. From this point, the graph algorithm to be used can work with the data and find the path from the start point to the exit. There is another module, which will process the result from the algorithm and draw the path found on the image from start to end.',\n        img: './img/maze04_finished.png',\n        src: 'https://github.com/henryvalbuena/MazeSolver'\n    },\n    {\n        id: 'P03',\n        name: 'Client-Server API',\n        title: 'Remote Manager',\n        meta: ['JavaScript', 'Node.js', 'C', 'C++', 'Linux', 'Shell Scripting'],\n        desc: 'Client side developed using C/C++ and Server side using Node.js, JavaScript and Shell Scripting',\n        detail: 'This application is based on two parts, the client and the server. The client, consist of a C/C++ application which encloses all the relevant processes to be able to: 1) connect with the server 2) to send and receive data 3) to work with the data or state of the server. The server is a combination of Node.js, JavaScript and Shell Scripts using Node\\'s API',\n        img: './img/client_server.png',\n        src: 'https://github.com/henryvalbuena/cpp_nodejs_sockets'\n    },\n    {\n        id: 'P01',\n        name: 'Web Game',\n        title: 'Space Battle',\n        meta: ['JavaScript', 'HTML', 'Canvas', 'GPL', 'Web API'],\n        desc: 'Space battle game developed using JavaScript',\n        detail: '2D web browser game developed using Canvas API, DOM, and JavaScript to render the visuals, design and implement the game logic, and control user interaction. This was one of the projects I was doing while doing #100DaysofCode as part of my personal challenge to learn more things whiles coding. It is not polished, but the way I coded makes it easy to refactor and/or improve. It is the first game I ever created',\n        img: './img/ran-image-d23.gif',\n        src: 'https://github.com/henryvalbuena/SpaceBattle'\n    }\n]\nexport default projects;","import React, { Component } from 'react'\nimport { Icon, Menu, Segment, Sidebar } from 'semantic-ui-react'\nimport menuItems from '../constants'\n\nexport default class SideMenu extends Component {\n  state = { visible: false }\n  handleSidebarHide = () => this.setState({ visible: false })\n  componentWillReceiveProps(props) {\n    const { visible } = props\n    this.setState({visible: visible})\n  }\n\n  render() {\n    const { visible } = this.state;\n\n    return (\n      <div>\n        <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation='push'\n            icon='labeled'\n            inverted\n            onHide={this.handleSidebarHide}\n            vertical\n            visible={visible}\n            width='thin'\n            direction='top'>\n            <Menu.Item href={menuItems.redirectEmail} target='_blank'\n              name={menuItems.contact}>\n              <Icon name='home' />\n              {menuItems.contact}\n            </Menu.Item>\n            <Menu.Item href={menuItems.redirectGitHub} target='_blank'\n              name={menuItems.git}>\n              <Icon name='gamepad' />\n              {menuItems.git}\n            </Menu.Item>\n          </Sidebar>\n          <Sidebar.Pusher>\n            {this.props.children}\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    );\n  }\n}\n","const aboutMe = {\n    intro: ['Hi, my name is Henry Valbuena and coding has been my hobby since the time I saw a computer when I was 12 years old, back then there were not many resources available for me where I could learn more about it, but that didn\\'t stopped me. I was able to take a course about computers, then I read some books in the local library, but there was one thing missing, a PC where I could start experimenting. I got my first PC when I was in the university, things changed, I started creating simple programs in Java, then I was able to get an Internet service, things changed again, I started following a YouTube channel called thenewboston, from there I couldn\\'t stop wanting to lear more and more. Many years later, after finding a job in Huawei, I found myself creating small programs and scripts that helped me and my coworkers autome rutine tasks in our daily duties. I thought, why am I not yet working as a programmer? Why I am not doing what I love for a living? After these kind of thoughts, 2017 hit me and made the decision, I will become a Professional Computer Programmer. I started refining my skills trying to align them with the industry and in 2018 took the step to quit my job and became a fulltime Computer Programmer at Seneca College. Now, here I am ready for the next challenge, wanting to learn even more now than ever, and always curious how things work.'],\n    interest: [\n        'Blockchain',\n        'AI, Machine Learning, Deep Learning',\n        'Object-oriented Programming',\n        'Memory Management',\n        'Performance and Optimization',\n        'IoT',\n        'Algorithms',\n        'Challenges',\n        'Solving problems',\n        'Crossfit',\n        'Nature',\n        'Space and Astrophysics',\n        'Mental Models',\n        'Helping however I can'\n    ]\n}\n\nexport default aboutMe;","import React, { Component } from 'react'\nimport { Container } from 'semantic-ui-react'\n\nexport default class ListContainer extends Component {\n    render() {\n      const  {list} = this.props;\n      const line = list.map((ele, idx) =>\n              '* ' + ele + ' '\n      );\n      return (\n        <Container>\n            {line}\n        </Container>\n      )\n    }\n  }","import React, { Component } from 'react';\nimport TextContainer from '../components/TextContainer';\nimport MenuBar from '../components/MenuBar';\nimport ProjectCardList from '../components/ProjectCardList';\nimport { Grid } from 'semantic-ui-react';\nimport projects from '../projectList';\nimport SideMenu from '../components/SideMenu';\nimport aboutMe from '../about';\nimport ListContainer from '../components/ListContainer';\n\nclass App extends Component {\n    state = { visible: false }\n    \n    showSideMenu = () => {\n        this.setState(prevState => ({\n            visible: !prevState.visible\n        }))\n    }\n    \n    render() {\n        return (\n            <div>\n                <MenuBar showSideMenu={this.showSideMenu}/>\n                <SideMenu visible={this.state.visible}>\n                    <Grid centered columns='equal'>\n                        <Grid.Row>\n                            <h1 className='header'>Welcome</h1>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <h3>A little about me</h3>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <TextContainer text={aboutMe.intro}/>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <h3>Interests</h3>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <ListContainer list={aboutMe.interest}/>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <h3>Most recent projects</h3>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <ProjectCardList projects={projects}/>\n                        </Grid.Row>\n                    </Grid>\n                </SideMenu>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './containers/App.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}